type salesforce.EmailMessage {
  salesforce.Lookup RelatedToId {
    referenceTo = [
      salesforce.Account,
      salesforce.AppointmentInvitation,
      salesforce.Asset,
      salesforce.AssetRelationship,
      salesforce.AssignedResource,
      salesforce.Campaign,
      salesforce.Case,
      salesforce.ChangeRequest,
      salesforce.CommSubscriptionConsent,
      salesforce.ContactRequest,
      salesforce.Contract,
      salesforce.ContractLineItem,
      salesforce.CreditMemo,
      salesforce.Entitlement,
      salesforce.Image,
      salesforce.Incident,
      salesforce.Invoice,
      salesforce.LegalEntity,
      "ListEmail",
      salesforce.Location,
      salesforce.OperatingHoursHoliday,
      salesforce.Opportunity,
      salesforce.Order,
      salesforce.PartyConsent,
      salesforce.Problem,
      salesforce.ProcessException,
      salesforce.Product2,
      salesforce.ResourceAbsence,
      salesforce.ReturnOrder,
      salesforce.ReturnOrderLineItem,
      salesforce.ServiceAppointment,
      salesforce.ServiceContract,
      salesforce.ServiceResource,
      salesforce.Shift,
      salesforce.Solution,
      salesforce.WorkOrder,
      salesforce.WorkOrderLineItem,
      salesforce.WorkPlan,
      salesforce.WorkPlanTemplate,
      salesforce.WorkPlanTemplateEntry,
      salesforce.WorkStep,
      salesforce.WorkStepTemplate,
    ]
  }
}
type salesforce.EmailMessage {
  salesforce.Picklist ValidatedFromAddress {
    valueSet = [
      {
        fullName = "guy.hamo@salto.io"
        isActive = true
        label = "tester mctestface <guy.hamo@salto.io>"
        default = false
      },
    ]
  }
}
